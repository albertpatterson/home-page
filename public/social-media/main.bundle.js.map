{"version":3,"sources":["C:/Users/apatters/code/home-page/apps/social-media/src/$_gendir lazy","C:/Users/apatters/code/home-page/apps/social-media/src/app/app-routing.module.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/app.component.css","C:/Users/apatters/code/home-page/apps/social-media/src/app/app.component.html","C:/Users/apatters/code/home-page/apps/social-media/src/app/app.component.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/app.module.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/log-in.component.css","C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/log-in.component.html","C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/log-in.component.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/signIn/sign-in.component.css","C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/signIn/sign-in.component.html","C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/signIn/sign-in.component.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/signUp/sign-up.component.css","C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/signUp/sign-up.component.html","C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/signUp/sign-up.component.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/home/home.component.css","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/home/home.component.html","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/home/home.component.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/member.component.css","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/member.component.html","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/member.component.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/member.module.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/messages/messages.component.css","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/messages/messages.component.html","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/messages/messages.component.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/premium/premium.component.css","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/premium/premium.component.html","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/premium/premium.component.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/profile/profile.component.css","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/profile/profile.component.html","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/profile/profile.component.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/search/search.component.css","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/search/search.component.html","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/search/search.component.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/services/message.service.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/services/personal-data.service.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/services/post.service.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/services/premium.service.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/services/subscription.service.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/utils/messageForm/message-form.component.css","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/utils/messageForm/message-form.component.html","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/utils/messageForm/message-form.component.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/utils/post/post.component.css","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/utils/post/post.component.html","C:/Users/apatters/code/home-page/apps/social-media/src/app/member/utils/post/post.component.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/not-found.component.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/services/auth.service.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/services/sign-up.service.ts","C:/Users/apatters/code/home-page/apps/social-media/src/app/utils/handleResponse.ts","C:/Users/apatters/code/home-page/apps/social-media/src/environments/environment.ts","C:/Users/apatters/code/home-page/apps/social-media/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import {NgModule} from '@angular/core';\r\nimport {RouterModule,Routes} from '@angular/router';\r\n\r\n// import {SignInComponent} from './signIn/sign-in.component';\r\nimport { LogInComponent } from './logIn/log-in.component';\r\nimport { NotFoundComponent } from './not-found.component';\r\nimport { MemberComponent } from './member/member.component';\r\n\r\nconst routes: Routes = [\r\n    {path: 'member/:ownName', component: MemberComponent},\r\n    {path: 'sign-in', component: LogInComponent},\r\n    {path: '', redirectTo: '/sign-in', pathMatch: 'full'},\r\n    { path: '**', component: NotFoundComponent }\r\n  ];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {};\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<h1 class=\\\"centeredText\\\">Social Media Demo</h1>\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'my-app',\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent  { \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/app.component.ts","import { NgModule }      from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes, Router } from '@angular/router';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\n\r\nimport {MemberModule} from './member/member.module';\r\n\r\n\r\nimport { AppComponent }  from './app.component';\r\nimport { NotFoundComponent }  from './not-found.component';\r\n// import { SignInComponent } from './signIn/sign-in.component';\r\nimport { LogInComponent } from './logIn/log-in.component';\r\nimport { SignInComponent } from './logIn/signIn/sign-in.component';\r\nimport { SignUpComponent } from './logIn/signUp/sign-up.component';\r\n\r\n\r\nimport {AuthService} from './services/auth.service'\r\nimport {SignUpService} from './services/sign-up.service'\r\n\r\n// import { AuthService } from './services/mock_auth.service';\r\n\r\n\r\n@NgModule({\r\n  imports:      [ BrowserModule,\r\n                  FormsModule,\r\n                  MemberModule,\r\n                  AppRoutingModule,\r\n                  HttpModule\r\n                   ],\r\n\r\n  declarations: [ AppComponent,\r\n                  NotFoundComponent,\r\n                  LogInComponent,\r\n                  SignInComponent,\r\n                  SignUpComponent ],\r\n\r\n  bootstrap:    [ AppComponent ],\r\n  providers: [  AuthService,\r\n                SignUpService ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/log-in.component.css\n// module id = ../../../../../src/app/logIn/log-in.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <h2>Sign In</h2>\\r\\n        <sign-in (signedInEvent)=\\\"goHome($event)\\\"></sign-in>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <h2>Sign up</h2>\\r\\n        <sign-up (signedUpEvent)=\\\"goHome($event)\\\"></sign-up>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/log-in.component.html\n// module id = ../../../../../src/app/logIn/log-in.component.html\n// module chunks = main","import {Component} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n/**\r\n * Component showing the log-in and sign-up forms, which routes the user to their home page after signing in\r\n * \r\n * @export\r\n * @class LogInComponent\r\n */\r\n@Component({\r\n    selector: \"log-in\",\r\n    templateUrl: \"./log-in.component.html\",\r\n    styleUrls:  [\"./log-in.component.css\"]\r\n})\r\nexport class LogInComponent{\r\n\r\n    constructor(\r\n        private router: Router\r\n    ){}\r\n\r\n    // navigate the user to their home page\r\n    goHome(username: string){\r\n        console.log(\"go home \"+username)\r\n        this.router.navigate([\"member\", username]);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/log-in.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/signIn/sign-in.component.css\n// module id = ../../../../../src/app/logIn/signIn/sign-in.component.css\n// module chunks = main","module.exports = \"<div class=\\\"signInFormContainer\\\">\\r\\n    <form #signInForm=\\\"ngForm\\\" \\r\\n            (ngSubmit)=\\\"signIn()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"username\\\">Username</label>\\r\\n        <input  type=\\\"text\\\" \\r\\n                class=\\\"form-control\\\" \\r\\n                id=\\\"username\\\" \\r\\n                required\\r\\n                [(ngModel)]=\\\"username\\\" \\r\\n                name=\\\"username\\\"\\r\\n                #usernameInput=\\\"ngModel\\\" \\r\\n                pattern={{usernamePattern}}>\\r\\n        <div  [hidden]=\\\"usernameInput.valid&&!usernameInput.pristine\\\" \\r\\n                class=\\\"alert alert-danger\\\">{{usernameDiagnostic}}</div>                \\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <input  type=\\\"password\\\" \\r\\n                class=\\\"form-control\\\" \\r\\n                id=\\\"password\\\" \\r\\n                required \\r\\n                [(ngModel)]=\\\"password\\\" \\r\\n                name=\\\"password\\\" \\r\\n                #passwordInput = \\\"ngModel\\\"\\r\\n                pattern={{passwordPattern}}>\\r\\n        <div  [hidden]=\\\"passwordInput.valid&&!passwordInput.pristine\\\" \\r\\n                class=\\\"alert alert-danger\\\">{{passwordDiagnostic}}</div>\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" \\r\\n                class=\\\"btn btn-success submitButton\\\" \\r\\n                [disabled]=\\\"!signInForm.valid\\\">Sign In</button>\\r\\n        <div  [hidden]=\\\"!invalidCredentials\\\" \\r\\n            class=\\\"alert alert-danger\\\">{{invalidCredentialsDiagnostic}}</div>\\r\\n    </form>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/signIn/sign-in.component.html\n// module id = ../../../../../src/app/logIn/signIn/sign-in.component.html\n// module chunks = main","import { Component, EventEmitter } from '@angular/core';\r\n\r\nimport { AuthService } from './../../services/auth.service';\r\n\r\n/**\r\n * Component allowing users to sign into their existing account\r\n * \r\n * @export\r\n * @class SignInComponent\r\n */\r\n@Component({\r\n    selector: 'sign-in',\r\n    outputs: [\"signedInEvent\"],\r\n    templateUrl: './sign-in.component.html',\r\n    styleUrls:['./sign-in.component.css']\r\n})\r\nexport class SignInComponent {\r\n    \r\n    /**\r\n     * event to be emitted when the user has signed in\r\n     * \r\n     * @type {EventEmitter<string>}\r\n     * @memberof SignInComponent\r\n     */\r\n    public signedInEvent: EventEmitter<string> = new EventEmitter();\r\n    \r\n    username: string;\r\n    usernamePattern: string = \"\\\\w{1,10}\";\r\n    usernameDiagnostic: string = \"username must be alphanumeric and be between 1 and 10 characters\";\r\n    \r\n    password: string;\r\n    passwordPattern: string = \"\\\\S{1,10}\"; \r\n    passwordDiagnostic: string = \"password must contain no white space and be between 1 and 10 characters\";\r\n\r\n    invalidCredentials: Boolean = false;\r\n    invalidCredentialsBaseDiagnostic: string = \"Invalid username and/or password!\";  \r\n    invalidCredentialsDiagnostic: string = \"\";\r\n    \r\n    constructor(\r\n        private authService: AuthService\r\n        ){}\r\n    \r\n    /**\r\n     * attempt to sign into a user's account\r\n     * \r\n     * @memberof SignInComponent\r\n     */\r\n    signIn(): void {\r\n        console.log(\" sign in \"+this.username+\" \"+this.password)\r\n        this.authService.tryLogin(this.username, this.password)\r\n        .then( ()=>this.signedInEvent.next(this.username) )\r\n        .catch( this._updateUserOfLoginError.bind(this) );\r\n    }\r\n\r\n    /**\r\n     * update the invalid login information shown to the user and reset password\r\n     * \r\n     * @param {*} error \r\n     * @memberof SignInComponent\r\n     */\r\n    _updateUserOfLoginError(error: any){\r\n        console.log('login err', error)\r\n        this.invalidCredentials = true;\r\n        this.password = '';\r\n        this.invalidCredentialsDiagnostic = this.invalidCredentialsBaseDiagnostic + (error?(\" \" + error):null);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/signIn/sign-in.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/signUp/sign-up.component.css\n// module id = ../../../../../src/app/logIn/signUp/sign-up.component.css\n// module chunks = main","module.exports = \"<div class=\\\"signUpFormContainer\\\">\\r\\n    <form #signUpForm=\\\"ngForm\\\" \\r\\n            (ngSubmit)=\\\"signUp()\\\">\\r\\n        <!--username-->\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"username\\\">Username</label>\\r\\n            <input  type=\\\"text\\\" \\r\\n                    class=\\\"form-control\\\" \\r\\n                    id=\\\"username\\\" \\r\\n                    required \\r\\n                    [(ngModel)]=\\\"username\\\" \\r\\n                    name=\\\"username\\\" \\r\\n                    #usernameInput=\\\"ngModel\\\" \\r\\n                    pattern={{usernamePattern}}>\\r\\n            <div  [hidden]=\\\"usernameInput.valid&&!usernameInput.pristine\\\" \\r\\n                    class=\\\"alert alert-danger\\\">{{usernameDiagnostic}}</div>                \\r\\n        </div>\\r\\n        <!--password-->\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"password\\\">Password</label>\\r\\n            <input  type=\\\"password\\\" \\r\\n                    class=\\\"form-control\\\" \\r\\n                    name=\\\"password\\\" \\r\\n                    id=\\\"password\\\" \\r\\n                    required \\r\\n                    [(ngModel)]=\\\"password\\\" \\r\\n                    #passwordInput = \\\"ngModel\\\"\\r\\n                    pattern={{passwordPattern}}>\\r\\n            <div  [hidden]=\\\"passwordInput.valid&&!passwordInput.pristine\\\" \\r\\n                    class=\\\"alert alert-danger\\\">{{passwordDiagnostic}}</div>\\r\\n            </div>\\r\\n        <!--Location-->\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"location\\\">Location</label>\\r\\n            <input  type=\\\"text\\\" \\r\\n                    class=\\\"form-control\\\" \\r\\n                    name=\\\"location\\\" \\r\\n                    id=\\\"location\\\" \\r\\n                    required \\r\\n                    [(ngModel)]=\\\"location\\\" \\r\\n                    #locationInput = \\\"ngModel\\\"\\r\\n                    pattern={{locationPattern}}>\\r\\n            <div  [hidden]=\\\"locationInput.valid&&!locationInput.pristine\\\" \\r\\n                    class=\\\"alert alert-danger\\\">{{locationDiagnostic}}</div>\\r\\n        </div>\\r\\n        <!--Date of birth-->\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"DOB\\\">Date of Birth</label>\\r\\n            <input  type=\\\"date\\\" \\r\\n                    class=\\\"form-control\\\" \\r\\n                    name=\\\"DOB\\\" \\r\\n                    id=\\\"DOB\\\" \\r\\n                    required \\r\\n                    [(ngModel)]=\\\"DOB\\\" \\r\\n                    #DOBInput = \\\"ngModel\\\" \\r\\n                    [max]=\\\"DOBMax\\\">\\r\\n            <div  [hidden]=\\\"DOBInput.valid&&!DOBInput.pristine\\\" \\r\\n                    class=\\\"alert alert-danger\\\">{{DOBDiagnostic}}</div>\\r\\n            </div>          \\r\\n        <!--Business-->\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"business\\\">Business</label>\\r\\n            <input  type=\\\"text\\\" \\r\\n                    class=\\\"form-control\\\" \\r\\n                    name=\\\"business\\\" \\r\\n                    id=\\\"business\\\" \\r\\n                    required \\r\\n                    [(ngModel)]=\\\"business\\\" \\r\\n                    #businessInput = \\\"ngModel\\\"\\r\\n                    pattern={{businessPattern}}>\\r\\n            <div  [hidden]=\\\"businessInput.valid&&!businessInput.pristine\\\" \\r\\n                    class=\\\"alert alert-danger\\\">{{businessDiagnostic}}</div>\\r\\n        </div>\\r\\n        <!--Picture-->\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"picture\\\">Picture</label>\\r\\n            <input  type=\\\"file\\\" \\r\\n                    class=\\\"form-control\\\" \\r\\n                    name=\\\"picture\\\" \\r\\n                    id=\\\"picture\\\" \\r\\n                    required \\r\\n                    accept=\\\"image/*\\\" \\r\\n                    (change)=\\\"addPicture($event)\\\" \\r\\n                    [class.inputValid]=\\\"!!picture\\\" \\r\\n                    [class.inputInvalid]=\\\"!picture\\\">\\r\\n            <div  [hidden]=\\\"!!picture\\\" \\r\\n                    class=\\\"alert alert-danger\\\">{{pictureDiagnostic}}</div>\\r\\n        </div>                    \\r\\n        <!--submit-->\\r\\n        <button type=\\\"submit\\\" \\r\\n                class=\\\"btn btn-success submitButton\\\" \\r\\n                [disabled]=\\\"(!signUpForm.valid)||(!picture)\\\">Sign Up</button>\\r\\n    </form>        \\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/signUp/sign-up.component.html\n// module id = ../../../../../src/app/logIn/signUp/sign-up.component.html\n// module chunks = main","import { Component, OnInit, EventEmitter } from '@angular/core';\r\n\r\nimport { SignUpService } from './../../services/sign-up.service';\r\n\r\n/**\r\n * Component allowing users to sign up for a new account\r\n * \r\n * @export\r\n * @class SignUpComponent\r\n * @implements {OnInit}\r\n */\r\n@Component({\r\n    selector: 'sign-up',\r\n    outputs: [\"signedUpEvent\"],\r\n    templateUrl: './sign-up.component.html',\r\n    styleUrls:['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit{\r\n\r\n    /**\r\n     * event to be emitted when a user has signed up\r\n     * \r\n     * @type {EventEmitter<String>}\r\n     * @memberof SignUpComponent\r\n     */\r\n    public signedUpEvent: EventEmitter<String> = new EventEmitter();\r\n\r\n    username: string;\r\n    usernamePattern: string = \"\\\\w{1,10}\";\r\n    usernameDiagnostic: string = \"username must be alphanumeric and be between 1 and 10 characters\";\r\n    \r\n    password: string;\r\n    passwordPattern: string = \"\\\\S{1,10}\"; \r\n    passwordDiagnostic: string = \"password must contain no white space and be between 1 and 10 characters\";\r\n\r\n    location: string;\r\n    locationPattern: string = \".*\"; \r\n    locationDiagnostic: string = \"Your current location\";\r\n\r\n    DOB: string;\r\n    DOBMax: string;\r\n    DOBDiagnostic: string = \"Your birth date\";\r\n\r\n    business: string;\r\n    businessPattern: string = \".*\"; \r\n    businessDiagnostic: string = \"Your current business\"; \r\n\r\n    picture: any;\r\n    pictureDiagnostic: string = \"Your photo\";\r\n    \r\n    constructor(\r\n        private signUpService: SignUpService){\r\n    }\r\n    \r\n    ngOnInit():void{\r\n        // set the maximum DOB allowed in the sign up form to today's date\r\n        this.DOBMax = this._getTodaysDate();\r\n    }\r\n\r\n\r\n    /**\r\n     * Attempt to sign the user up for an account\r\n     * \r\n     * @memberof SignUpComponent\r\n     */\r\n    signUp(){\r\n        console.log('call sign up service')\r\n        this.signUpService.signUp(this.username, this.location, this.DOB, this.business, this.picture, this.password)\r\n        .then(()=>{console.log('response from sign up request ' + this.username); this.signedUpEvent.next(this.username)})\r\n        .catch((err)=>this._handleSignUpError(err))\r\n    }\r\n\r\n    /**\r\n     * extract the user's photo from the form\r\n     * \r\n     * @param {*} event \r\n     * @memberof SignUpComponent\r\n     */\r\n    addPicture(event: any):void {\r\n        this.picture = event.target.files[0];\r\n    }\r\n\r\n    /**\r\n     * handle an error in the sign up attempt\r\n     * \r\n     * @private\r\n     * @param {*} error \r\n     * @memberof SignUpComponent\r\n     */\r\n    private _handleSignUpError(error: any){\r\n        console.log(error)\r\n        alert(error);\r\n    }\r\n\r\n    /**\r\n     * get the current date\r\n     * \r\n     * @private\r\n     * @returns {string} \r\n     * @memberof SignUpComponent\r\n     */\r\n    private _getTodaysDate(): string{\r\n        const date = new Date();\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth()+1;\r\n        const day = date.getDate();\r\n\r\n        return year + \"-\" + (month>9?month:\"0\"+month) + \"-\" + (day>9?day:\"0\"+day);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/logIn/signUp/sign-up.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#postForm {\\r\\n    width: 90%;\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n.posts{\\r\\n    width: 100%;\\r\\n    margin-top: 25px;\\r\\n}\\r\\n\\r\\n#addContent{\\r\\n    display: block;\\r\\n    margin: 0 auto;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/home/home.component.css\n// module id = ../../../../../src/app/member/home/home.component.css\n// module chunks = main","module.exports = \"<div id=\\\"postItemRow\\\" class=\\\"row\\\">\\r\\n    \\r\\n    <div class = col-sm-12>\\r\\n    \\r\\n        <button id=\\\"addContent\\\" \\r\\n                class=\\\"btn btn-primary centered\\\" \\r\\n                data-toggle=\\\"collapse\\\" \\r\\n                data-target=\\\"#postFormContainer\\\">New Post</button>\\r\\n    \\r\\n        <div    id=\\\"postFormContainer\\\" \\r\\n                class=\\\"collapse\\\">\\r\\n    \\r\\n            <div class=\\\"large centered\\\">\\r\\n                <message-form   rows=\\\"10\\\" \\r\\n                                label=\\\"Posts\\\"\\r\\n                                (postSubmitted)=\\\"addPost($event)\\\"></message-form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!followedPosts\\\">\\r\\nLoading...\\r\\n</div>\\r\\n\\r\\n<div class=\\\"posts\\\">\\r\\n\\r\\n    <div *ngFor=\\\"let post of followedPosts\\\">\\r\\n\\r\\n        <post   [poster]=\\\"post.poster\\\" \\r\\n                [timestamp]=\\\"post.timestamp\\\" \\r\\n                [content]=\\\"post.content\\\" \\r\\n                (userSelect)=\\\"selectUser($event)\\\"></post>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/home/home.component.html\n// module id = ../../../../../src/app/member/home/home.component.html\n// module chunks = main","import { Component, OnInit, EventEmitter } from '@angular/core';\r\n\r\nimport {Router, ActivatedRoute,Params} from '@angular/router';\r\n\r\nimport {PostService} from './../services/post.service';\r\n// import {PostService} from './../services/mock_post.service';\r\n\r\nimport {Post} from './../Post';\r\n\r\n\r\n/**\r\n * Component showing the member's home page, allowing the to \r\n * view followed posts and add new ones\r\n * \r\n * @export\r\n * @class HomeComponent\r\n * @implements {OnInit}\r\n */\r\n@Component({\r\n    selector: 'member-home',\r\n    inputs: ['username'],\r\n    outputs: ['userSelect'],\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent implements OnInit{\r\n\r\n    /**\r\n     * the name of the user\r\n     * \r\n     * @type {string}\r\n     * @memberof HomeComponent\r\n     */\r\n    public username: string;\r\n\r\n    /**\r\n     * event to be emitted when a user is selected from the followed posts\r\n     * \r\n     * @type {EventEmitter<string>}\r\n     * @memberof HomeComponent\r\n     */\r\n    public userSelect: EventEmitter<string> = new EventEmitter();\r\n\r\n    /**\r\n     * the posted followed by the user\r\n     * \r\n     * @private\r\n     * @type {Post[]}\r\n     * @memberof HomeComponent\r\n     */\r\n    private followedPosts: Post[];\r\n\r\n    /**\r\n     * the number of messages available to the user\r\n     * \r\n     * @private\r\n     * @type {number}\r\n     * @memberof HomeComponent\r\n     */\r\n    private messageCount: number;\r\n\r\n    /**\r\n     * Creates an instance of HomeComponent.\r\n     * @param {PostService} postService \r\n     * @memberof HomeComponent\r\n     */\r\n    constructor(\r\n        private postService: PostService\r\n        ) {}\r\n\r\n    /**\r\n     * update the list of followed posts on init\r\n     * \r\n     * @memberof HomeComponent\r\n     */\r\n    ngOnInit(): void {\r\n        this._updateFollowedPosts();\r\n        console.log('home', this.username)\r\n    }\r\n\r\n    /**\r\n     * add a new post\r\n     * \r\n     * @param {string} postContent \r\n     * @memberof HomeComponent\r\n     */\r\n    addPost(postContent: string): void{\r\n        \r\n        this.postService.addPost(this.username, postContent)\r\n        .then(function(){\r\n            console.log('add post comp', this.username, postContent);\r\n            return this._updateFollowedPosts();\r\n        }.bind(this))\r\n    }\r\n\r\n    /**\r\n     * update the list of followed posts\r\n     * \r\n     * @returns {Promise<Post[]>} \r\n     * @memberof HomeComponent\r\n     */\r\n    _updateFollowedPosts(): Promise<Post[]>{\r\n        return  this.postService.getFollowedPosts(this.username)\r\n                .then(function(followedPosts: Post[]){\r\n                    console.log('update', followedPosts);\r\n                    this.followedPosts=followedPosts;\r\n                }.bind(this));\r\n    }\r\n\r\n    /**\r\n     * select a user from the list of posts and emit the userSelect event\r\n     * \r\n     * @param {string} otherUsername \r\n     * @memberof HomeComponent\r\n     */\r\n    selectUser(selectedUserName: string){\r\n        this.userSelect.next(selectedUserName);\r\n    }    \r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/home/home.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* .ad {\\r\\n    background-color: grey;\\r\\n    color: white;\\r\\n    height: 100px;\\r\\n} */\\r\\n\\r\\n.contentItem{\\r\\n    background-color: green;\\r\\n    border: 5px solid black;\\r\\n}\\r\\n\\r\\ndiv.placeHolder100 {\\r\\n    height: 100px;\\r\\n}\\r\\n\\r\\ndiv.placeHolder150 {\\r\\n    height: 150px;\\r\\n}\\r\\n\\r\\n.navButton {\\r\\n    padding: 10px 0px;\\r\\n}\\r\\n\\r\\n.interactBtn {\\r\\n    padding: 10px 0px;\\r\\n    width: 50%;\\r\\n}\\r\\n\\r\\n/* .picture {\\r\\n    height: 500px;\\r\\n    max-width: 100%;\\r\\n} */\\r\\n\\r\\n.nameText {\\r\\n    margin-top: 70px;\\r\\n    font-size: 70px;\\r\\n}\\r\\n\\r\\n.infoText {\\r\\n    font-size: 36px\\r\\n}\\r\\n\\r\\n/* .centered {\\r\\n    display: block;\\r\\n    margin: auto;\\r\\n} */\\r\\n\\r\\n/* .fullwidth {\\r\\n    width: 100%;\\r\\n} */\\r\\n\\r\\n#searchField {\\r\\n    width: 60%;\\r\\n    padding: 9px 0px;\\r\\n}\\r\\n\\r\\n#searchButton {\\r\\n    width: 38%;\\r\\n    padding: 10px 0px;\\r\\n    position: absolute;\\r\\n}\\r\\n\\r\\n#homeButton {\\r\\n    width: 18%;\\r\\n}\\r\\n\\r\\n#messagesButton {\\r\\n    width: 35%;\\r\\n}\\r\\n\\r\\n#premiumButton {\\r\\n    width: 27%;\\r\\n}\\r\\n\\r\\n#signOutButton {\\r\\n    width: 20%;\\r\\n}\\r\\n/* \\r\\n.thumbnail {\\r\\n    max-width: 250px;\\r\\n    height: auto;\\r\\n}\\r\\n\\r\\n.fullsize {\\r\\n    max-height: 500px;\\r\\n    max-width: 100%;\\r\\n    height: auto;\\r\\n}\\r\\n\\r\\n.floatLeft {\\r\\n    float:right;\\r\\n}\\r\\n\\r\\n.overflowHidden {\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.displayInline {\\r\\n    display: inline;\\r\\n} */\\r\\n\\r\\n\\r\\n\\r\\n/* .centeredText {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.large {\\r\\n    width: 90%\\r\\n} */\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/member.component.css\n// module id = ../../../../../src/app/member/member.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    \\r\\n    <div class=\\\"row\\\">\\r\\n    \\r\\n        <div class=\\\"ad col-sm-6\\\" id=\\\"ad1\\\">\\r\\n            Add 1\\r\\n        </div>\\r\\n    \\r\\n        <div class=\\\"ad col-sm-6\\\" id=\\\"ad2\\\">\\r\\n            Add 2\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <br>\\r\\n    <div    class=\\\"row\\\" \\r\\n            id=\\\"navigation\\\">\\r\\n        \\r\\n        <div    id=\\\"searchForm\\\" \\r\\n                class=\\\"col-sm-4\\\">\\r\\n            \\r\\n            <div class=\\\"fullwidth\\\">\\r\\n                \\r\\n                <input  type=\\\"text\\\" \\r\\n                        id=\\\"searchField\\\" \\r\\n                        #searchField \\r\\n                        (keyup.enter)=\\\"search(searchField.value)\\\">\\r\\n                \\r\\n                <button id=\\\"searchButton\\\" \\r\\n                        type=\\\"submit\\\" \\r\\n                        class=\\\"btn btn-success\\\" \\r\\n                        (click)=\\\"search(searchField.value)\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n            <div    class=\\\"btn-group fullwidth\\\" \\r\\n                    role=\\\"group\\\">\\r\\n                \\r\\n                <a  id=\\\"homeButton\\\" \\r\\n                    class=\\\"btn btn-primary navButton\\\" \\r\\n                    (click)=\\\"go('home')\\\">home</a>\\r\\n                \\r\\n                <a  id=\\\"messagesButton\\\" \\r\\n                    class=\\\"btn btn-primary navButton\\\" \\r\\n                    (click)=\\\"go('messages')\\\">\\r\\n                    <span   id=\\\"messageCount\\\" \\r\\n                            class=\\\"badge\\\">{{messageCount}}</span>     messages</a>\\r\\n                \\r\\n                <a  id=\\\"premiumButton\\\" \\r\\n                    class=\\\"btn btn-primary navButton\\\" \\r\\n                    (click)=\\\"go('premium')\\\">premium</a>\\r\\n                \\r\\n                <button id=\\\"signOutButton\\\" \\r\\n                        class=\\\"btn btn-primary navButton\\\" \\r\\n                        (click)=\\\"signout()\\\">signout</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <br>\\r\\n    <div class=\\\"row\\\" [ngSwitch]=\\\"currentPage\\\">\\r\\n        \\r\\n        <member-home    *ngSwitchCase=\\\"'home'\\\" \\r\\n                        [username]=\\\"username\\\" \\r\\n                        (userSelect)=\\\"goProfile($event)\\\"></member-home>\\r\\n        \\r\\n        <member-messages    *ngSwitchCase=\\\"'messages'\\\" \\r\\n                            [username]=\\\"username\\\"\\r\\n                            (userSelect)=\\\"goProfile($event)\\\"></member-messages>\\r\\n        \\r\\n        <member-premium     *ngSwitchCase=\\\"'premium'\\\" \\r\\n                            [username]=\\\"username\\\"\\r\\n                            (userSelect)=\\\"goProfile($event)\\\"></member-premium>\\r\\n        \\r\\n        <member-search  *ngSwitchCase=\\\"'search'\\\" \\r\\n                        [username]=\\\"username\\\" \\r\\n                        [searchPattern]=\\\"searchComponentData.searchPattern\\\" \\r\\n                        (userSelect)=\\\"goProfile($event)\\\"></member-search>\\r\\n        \\r\\n        <member-profile *ngSwitchCase=\\\"'profile'\\\" \\r\\n                        [username]=\\\"username\\\" \\r\\n                        [profileUsername]=\\\"profileComponentData.profileUsername\\\"></member-profile>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/member.component.html\n// module id = ../../../../../src/app/member/member.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, Event, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport {AuthService} from './../services/auth.service'\r\n// import { AuthService } from './../services/mock_auth.service';\r\nimport {MessageService} from './services/message.service';\r\n// import {MessageService} from './services/mock_message.service';\r\n\r\n\r\n/**\r\n * Component implementing the member area, including the following \r\n * pages: home, messages, search, premium, profile\r\n * \r\n * @export\r\n * @class MemberComponent\r\n * @implements {OnInit}\r\n */\r\n@Component({\r\n  templateUrl: './member.component.html',\r\n  styleUrls: ['./member.component.css']  \r\n})\r\nexport class MemberComponent implements OnInit{ \r\n    \r\n  // the current user's username\r\n  username: string;\r\n  // the number of messages available\r\n  messageCount: number;\r\n  // currently displayed page \r\n  currentPage: string = \"home\";\r\n  \r\n  // data required by the search component\r\n  searchComponentData = {\r\n                          searchPattern: ''\r\n                        };\r\n\r\n  // data required by the other user component\r\n  profileComponentData = {\r\n                              profileUsername: ''\r\n                            };\r\n\r\n  constructor(\r\n      private authService: AuthService,\r\n      private router: Router,\r\n      private messageService: MessageService,\r\n      private activatedRoute: ActivatedRoute\r\n      ) {}\r\n\r\n  /**\r\n   * update the count of the number of messages available\r\n   * \r\n   * @returns {Promise<any>} \r\n   * @memberof MemberComponent\r\n   */\r\n  _setMessageCount(): Promise<any>{\r\n    console.log('get message count');\r\n    return  this.messageService.getMessageCount(this.username)\r\n            .then(function(messageCount: number){\r\n              console.log('message count', messageCount)\r\n              this.messageCount=messageCount;\r\n            }.bind(this));\r\n  }\r\n\r\n  /**\r\n   * go to a particlar view/page in the member area\r\n   * \r\n   * @param {string} page - the page in the member area to display \r\n   * @memberof MemberComponent\r\n   */\r\n  go(page: string): void{\r\n    this.authService.assertLoggedIn(this.username)\r\n      .then(this._setMessageCount.bind(this))\r\n      .catch((e:Error) => console.log(e));\r\n\r\n    this.currentPage = page;\r\n  }\r\n\r\n  /**\r\n   * perform a search for other users\r\n   * \r\n   * @param {string} searchPattern - the search pattern to match usernames\r\n   * @memberof MemberComponent\r\n   */\r\n  search(searchPattern: string): void {\r\n    console.log('search searchPattern', searchPattern)\r\n    this.searchComponentData.searchPattern = searchPattern;\r\n    this.go('search');\r\n  }\r\n\r\n  /**\r\n   * go to a users profile\r\n   * \r\n   * @param {string} profileUsername - the username of the user whose profile\r\n   *    should be shown\r\n   * @memberof MemberComponent\r\n   */\r\n  goProfile(profileUsername: string){\r\n    console.log('visit other!', profileUsername)\r\n    this.profileComponentData.profileUsername = profileUsername;\r\n    this.go(\"profile\");\r\n  }\r\n\r\n  /**\r\n   * sign out of the member area\r\n   * \r\n   * @memberof MemberComponent\r\n   */\r\n  signout(): void{\r\n    this.authService.signout(this.username)\r\n    .then(function(signedOut: Promise<any>){\r\n      this.router.navigate(['/sign-in']);\r\n    }.bind(this))\r\n  }\r\n\r\n  /**\r\n   * set the username, assert the user is logged in and then set\r\n   * the message count on init\r\n   * \r\n   * @memberof MemberComponent\r\n   */\r\n  ngOnInit(): void{\r\n\r\n      this.activatedRoute.params \r\n      .subscribe(function(params: Params){\r\n\r\n        console.log(params)\r\n        // get the username\r\n        this.username = params[\"ownName\"];;\r\n        console.log('username', this.username)\r\n\r\n          // verify login\r\n          this.authService.assertLoggedIn(this.username)\r\n          .then(this._setMessageCount.bind(this))\r\n          .catch((e:Error) => console.log(e));\r\n      }.bind(this))   \r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/member.component.ts","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms'\r\n\r\nimport {MemberComponent} from './member.component';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {MessagesComponent} from './messages/messages.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {SearchComponent} from './search/search.component';\r\nimport {PremiumComponent} from './premium/premium.component';\r\nimport {MessageFormComponent} from './utils/messageForm/message-form.component';\r\nimport {PostComponent} from './utils/post/post.component';\r\n\r\nimport {AuthService} from './../services/auth.service'\r\nimport {MessageService} from './services/message.service';\r\nimport {PostService} from './services/post.service';\r\nimport {PersonalDataService} from './services/personal-data.service';\r\nimport {PremiumService} from './services/premium.service';\r\nimport {SubscriptionService} from './services/subscription.service';\r\n\r\n\r\n@NgModule({\r\n    imports: [  CommonModule,\r\n                FormsModule],\r\n\r\n    declarations: [ MemberComponent, \r\n                    HomeComponent,\r\n                    MessagesComponent,\r\n                    ProfileComponent,\r\n                    SearchComponent,\r\n                    PremiumComponent,\r\n                    MessageFormComponent, \r\n                    PostComponent],\r\n\r\n    providers: [    AuthService,\r\n                    MessageService, \r\n                    PostService,\r\n                    PersonalDataService,\r\n                    PremiumService,\r\n                    SubscriptionService]\r\n})\r\nexport class MemberModule {};\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/member.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/messages/messages.component.css\n// module id = ../../../../../src/app/member/messages/messages.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"!messages\\\">\\r\\nLoading...\\r\\n</div>\\r\\n<div class=\\\"posts\\\">\\r\\n    <div *ngFor=\\\"let post of messages\\\">\\r\\n        <post   [poster]=\\\"post.poster\\\" \\r\\n                [timestamp]=\\\"post.timestamp\\\" \\r\\n                [content]=\\\"post.content\\\"\\r\\n                (userSelect)=\\\"selectUser($event)\\\"></post>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/messages/messages.component.html\n// module id = ../../../../../src/app/member/messages/messages.component.html\n// module chunks = main","import { Component, EventEmitter } from '@angular/core';\r\n\r\nimport {MessageService} from './../services/message.service';\r\n// import {MessageService} from './../services/mock_message.service';\r\n\r\nimport {Post} from './../Post';\r\n\r\n\r\n/**\r\n * Component used to display messages\r\n * \r\n * @export\r\n * @class MessagesComponent\r\n */\r\n@Component({\r\n    selector: 'member-messages',\r\n    inputs: ['username'],\r\n    outputs: ['userSelect'],\r\n    templateUrl: './messages.component.html',\r\n    styleUrls: [\r\n                    './messages.component.css'\r\n                ]\r\n})\r\nexport class MessagesComponent {\r\n\r\n    /**\r\n     * the user's username\r\n     * \r\n     * @type {string}\r\n     * @memberof MessagesComponent\r\n     */\r\n    private username: string;\r\n\r\n    /**\r\n     * event emitted when a user is selected from the messages component\r\n     * \r\n     * @private\r\n     * @type {EventEmitter<string>}\r\n     * @memberof MessagesComponent\r\n     */\r\n    private userSelect: EventEmitter<string> = new EventEmitter();\r\n\r\n    /**\r\n     * messages sent to the user\r\n     * \r\n     * @type {Post[]}\r\n     * @memberof MessagesComponent\r\n     */\r\n    private messages: Post[];\r\n\r\n    /**\r\n     * Creates an instance of MessagesComponent.\r\n     * @param {MessageService} messageService \r\n     * @memberof MessagesComponent\r\n     */\r\n    constructor(\r\n        private messageService: MessageService\r\n        ) {}\r\n\r\n    /**\r\n     * update the messages on init\r\n     * \r\n     * @memberof MessagesComponent\r\n     */\r\n    ngOnInit(): void{\r\n        this.messageService.getMessages(this.username)\r\n        .then(function(messages: Post[]){\r\n            this.messages=messages;\r\n        }.bind(this));\r\n    }\r\n\r\n    /**\r\n     * select a user\r\n     * \r\n     * @private\r\n     * @param {string} selectedUserName - the username of the user to select\r\n     * @memberof MessagesComponent\r\n     */\r\n    private selectUser(selectedUserName: string){\r\n        this.userSelect.next(selectedUserName);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/messages/messages.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".smallForm {\\r\\n    width: 50%;\\r\\n    min-width: 500px;\\r\\n}\\r\\n\\r\\n.fullWidth {\\r\\n    width: 100%;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/premium/premium.component.css\n// module id = ../../../../../src/app/member/premium/premium.component.css\n// module chunks = main","module.exports = \"<form #premiumForm=\\\"ngForm\\\" (ngSubmit)=\\\"fileInput.value=null; onSubmit()\\\">\\r\\n    <div class=\\\"form-group centered smallForm\\\">\\r\\n        <label for=\\\"premiumItem\\\">Purchase New Premium Item</label>\\r\\n        <input id=\\\"premiumItem\\\" #fileInput type=\\\"file\\\" required class=\\\"form-control fullWidth\\\" (change)=\\\"selectContent($event)\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success fullWidth\\\" [disabled]=\\\"!premiumForm.valid\\\">Purchase</button>\\r\\n    </div>\\r\\n</form>\\r\\n<br>\\r\\n<div *ngIf=\\\"!premiumGroups\\\">\\r\\nLoading...\\r\\n</div>\\r\\n<div *ngFor=\\\"let group of premiumGroups\\\" class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let item of group\\\" class = \\\"col-sm-4\\\">\\r\\n        <img src=\\\"{{item}}\\\" alt=\\\"Premium Item\\\" class=\\\"thumbnail centered\\\">\\r\\n    </div>\\r\\n    <br>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/premium/premium.component.html\n// module id = ../../../../../src/app/member/premium/premium.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\n\r\nimport {PremiumService} from './../services/premium.service';\r\n// import {PremiumService} from './../services/mock_premium.service';\r\n\r\nimport {PremiumContent} from '../PremiumContent';\r\n\r\n\r\n/**\r\n * Component providing viewing and purchase of premium content\r\n * \r\n * @export\r\n * @class PremiumComponent\r\n * @implements {OnInit}\r\n */\r\n@Component({\r\n    selector: \"member-premium\",\r\n    inputs: ['username'],\r\n    templateUrl: './premium.component.html',\r\n    styleUrls: ['./premium.component.css']\r\n})\r\nexport class PremiumComponent implements OnInit{\r\n\r\n    /**\r\n     * the name of the current user\r\n     * \r\n     * @private\r\n     * @type {string}\r\n     * @memberof PremiumComponent\r\n     */\r\n    private username: string;\r\n\r\n    /**\r\n     * new premium content to be added\r\n     * \r\n     * @private\r\n     * @type {*}\r\n     * @memberof PremiumComponent\r\n     */\r\n    private newContent: any;\r\n\r\n    /**\r\n     * groups of premium content for grid layout\r\n     * \r\n     * @private\r\n     * @type {string[][]}\r\n     * @memberof PremiumComponent\r\n     */\r\n    private premiumGroups: string[][];\r\n\r\n    /**\r\n     * Creates an instance of PremiumComponent.\r\n     * @param {PremiumService} premiumService \r\n     * @memberof PremiumComponent\r\n     */\r\n    constructor(\r\n        private premiumService: PremiumService\r\n    ){}\r\n\r\n    /**\r\n     * get the user's premium content and populate the grid on init\r\n     * \r\n     * @memberof PremiumComponent\r\n     */\r\n    ngOnInit(): void{\r\n\r\n        this.premiumService.getPremium(this.username)\r\n        .then(function(premiumItems: PremiumContent[]){\r\n            let premiumStrings = premiumItems.map((item: PremiumContent)=>item.content);\r\n            this.premiumGroups = this._toGrid(premiumStrings,3);\r\n        }.bind(this))\r\n    }\r\n\r\n    /**\r\n     * submit new premium content\r\n     * \r\n     * @memberof PremiumComponent\r\n     */\r\n    onSubmit():void{\r\n        this.premiumService.addPremium(this.username, this.newContent)\r\n        .then(()=>this.premiumService.getPremium(this.username))\r\n        .then(function(premiumItems: PremiumContent[]){\r\n            let premiumStrings = premiumItems.map((item: PremiumContent)=>item.content);\r\n            this.premiumGroups = this._toGrid(premiumStrings,3);\r\n        }.bind(this));\r\n    }\r\n\r\n    selectContent(event: any):void {\r\n        this.newContent = event.target.files[0];\r\n    }\r\n\r\n    /**\r\n     * create a grid\r\n     * \r\n     * @param {any[]} items \r\n     * @param {number} nCols \r\n     * @returns \r\n     * @memberof PremiumComponent\r\n     */\r\n    _toGrid(items: any[], nCols: number){\r\n        let grid = [];\r\n        const max=nCols*Math.ceil(items.length/nCols);\r\n        for(let idx=0; idx<max; idx+=nCols){\r\n            grid.push(items.slice(idx, idx+nCols))\r\n        }\r\n        return grid;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/premium/premium.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#followButton {\\r\\n    margin-left: 20%;\\r\\n    width: 30%;\\r\\n}\\r\\n\\r\\n#messageButton {\\r\\n    width: 30%;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/profile/profile.component.css\n// module id = ../../../../../src/app/member/profile/profile.component.css\n// module chunks = main","module.exports = \"<div    *ngIf=\\\"profileUserData\\\" \\r\\n        class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6 overflowHidden\\\">\\r\\n        <img    src=\\\"{{profileUserData.picture}}\\\" \\r\\n                alt=\\\"{{profileUserData.name}}'s photo'\\\" \\r\\n                class=\\\"fullsize centered\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <p class=\\\"centeredText\\\">\\r\\n            Name: {{profileUserData.name}}\\r\\n            <br>Age: {{profileUserData.age}}\\r\\n            <br>Location: {{profileUserData.location}}\\r\\n            <br>Business: {{profileUserData.business}}</p>\\r\\n        <br>\\r\\n        <button id=\\\"followButton\\\" \\r\\n                (click)=\\\"subscribe()\\\">Follow\\r\\n        </button><button \\r\\n                    id=\\\"messageButton\\\" \\r\\n                    data-toggle=\\\"collapse\\\" \\r\\n                    data-target=\\\"#sendMessageContainer\\\">Message</button>                    \\r\\n    </div>\\r\\n</div>\\r\\n<div id=\\\"sendMessageContainer\\\" class=\\\"collapse\\\">\\r\\n    <div class=\\\"large centered\\\">\\r\\n        <message-form   rows=\\\"15\\\" \\r\\n                        label=\\\"Message\\\"\\r\\n                        (postSubmitted)=\\\"sendMessage($event)\\\"></message-form>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"posts\\\">\\r\\n    <div *ngFor=\\\"let post of profilePosts\\\">\\r\\n        <post   [poster]=\\\"post.poster\\\" \\r\\n                [timestamp]=\\\"post.timestamp\\\" \\r\\n                [content]=\\\"post.content\\\"></post>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/profile/profile.component.html\n// module id = ../../../../../src/app/member/profile/profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { PersonalDataService } from './../services/personal-data.service';\r\nimport { PostService } from '../services/post.service';\r\nimport { MessageService } from './../services/message.service';\r\nimport { SubscriptionService } from './../services/subscription.service';\r\n\r\nimport { User } from '../User';\r\nimport { Post } from '../Post';\r\n\r\n\r\n/**\r\n * Component that displays a user's profile\r\n * \r\n * @export\r\n * @class ProfileComponent\r\n * @implements {OnInit}\r\n */\r\n@Component({\r\n    selector: 'member-profile',\r\n    inputs: ['username', 'profileUsername'],\r\n    templateUrl: './profile.component.html',\r\n    styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit{\r\n\r\n    /**\r\n     * the username of the currently signed in user\r\n     * \r\n     * @private\r\n     * @type {string}\r\n     * @memberof ProfileComponent\r\n     */\r\n    private username: string;\r\n    \r\n    /**\r\n     * the username of the user whose profile should be shown\r\n     * \r\n     * @private\r\n     * @type {string}\r\n     * @memberof ProfileComponent\r\n     */\r\n    private profileUsername: string;\r\n    \r\n    /**\r\n     * personal data of the profiled user\r\n     * \r\n     * @private\r\n     * @type {User}\r\n     * @memberof ProfileComponent\r\n     */\r\n    private profileUserData: User;   \r\n\r\n\r\n    /**\r\n     * posts of the profiled user\r\n     * \r\n     * @private\r\n     * @type {Post[]}\r\n     * @memberof ProfileComponent\r\n     */\r\n    private profilePosts: Post[];     \r\n\r\n    /**\r\n     * Creates an instance of ProfileComponent.\r\n     * @param {PersonalDataService} personalDataService \r\n     * @param {PostService} postService \r\n     * @param {MessageService} messageService \r\n     * @param {SubscriptionService} subscriptionService \r\n     * @memberof ProfileComponent\r\n     */\r\n    constructor(\r\n        private personalDataService: PersonalDataService,\r\n        private postService: PostService,\r\n        private messageService: MessageService,\r\n        private subscriptionService: SubscriptionService\r\n        ){}\r\n\r\n    /**\r\n     * get the personal data and posts of the profiled user in init\r\n     * \r\n     * @memberof ProfileComponent\r\n     */\r\n    ngOnInit(): void{\r\n        console.log('otherName', this.profileUsername)\r\n        this.personalDataService.getUserData(this.username, this.profileUsername)\r\n        .then(function(profileUserData: User){\r\n                this.profileUserData = profileUserData;\r\n                this.postService.getOwnPosts(this.username, this.profileUsername)\r\n                .then(function(profilePosts: Post[]){\r\n                    this.profilePosts = profilePosts;\r\n                }.bind(this))\r\n        }.bind(this))   \r\n    }\r\n\r\n    /**\r\n     * send a message to the profiled user\r\n     * \r\n     * @param {string} message - the content of the message to send\r\n     * @memberof ProfileComponent\r\n     */\r\n    private sendMessage(message: string): void {\r\n        alert(message);\r\n        this.messageService.addMessage(this.username, message, this.profileUsername)\r\n        .then(()=>alert(\"Message Sent!\"))\r\n    }\r\n\r\n\r\n    /**\r\n     * subscribe to posts by this user\r\n     * \r\n     * @private\r\n     * @memberof ProfileComponent\r\n     */\r\n    private subscribe(): void {\r\n        this.subscriptionService.addSubscription(this.username, this.profileUsername)\r\n        .then(()=>alert(\"Subscribed!\"))\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/profile/profile.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".userData {\\r\\n    background-color: #7a8c9b;\\r\\n    border-color: black;\\r\\n    border-radius: 5px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/search/search.component.css\n// module id = ../../../../../src/app/member/search/search.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"!userGroups\\\">\\r\\nLoading...\\r\\n</div>\\r\\n<div    *ngFor=\\\"let userGroup of userGroups\\\" \\r\\n        class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let user of userGroup\\\">\\r\\n        <div class=\\\"col-sm-2 overflowHidden\\\">\\r\\n            <a (click)=\\\"_selectUser(user.name)\\\">\\r\\n                <img    src=\\\"{{user.picture}}\\\" \\r\\n                        alt=\\\"{{user.name}}'s photo'\\\" \\r\\n                        class=\\\"fullsize centered\\\">\\r\\n            </a>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n            <div>\\r\\n                <p>Name: {{user.name}}</p>\\r\\n                <p>Age: {{user.age}}</p>\\r\\n                <p>Location: {{user.location}}</p>\\r\\n                <p>Business: {{user.business}}</p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <br>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/search/search.component.html\n// module id = ../../../../../src/app/member/search/search.component.html\n// module chunks = main","import { Component, OnChanges, EventEmitter } from '@angular/core';\r\n\r\nimport {PersonalDataService} from './../services/personal-data.service';\r\n\r\nimport { User } from './../User';\r\n\r\n/**\r\n * Component for searching for members on the site\r\n * \r\n * @export\r\n * @class SearchComponent\r\n * @implements {OnChanges}\r\n */\r\n@Component({\r\n    selector: 'member-search',\r\n    inputs: ['username', 'searchPattern'],\r\n    outputs: ['userSelect'],\r\n    templateUrl: './search.component.html',\r\n    styleUrls: [\r\n                    './search.component.css'\r\n                ]    \r\n})\r\nexport class SearchComponent implements OnChanges{\r\n\r\n    /**\r\n     * the name of the currently logged in user\r\n     * \r\n     * @type {string}\r\n     * @memberof SearchComponent\r\n     */\r\n    private username: string;\r\n\r\n    /**\r\n     * the search pattern to match with searching users\r\n     * \r\n     * @type {string}\r\n     * @memberof SearchComponent\r\n     */\r\n    private searchPattern: string;\r\n\r\n    /**\r\n     * event to be emitted when a user is selected from the search results\r\n     * \r\n     * @type {EventEmitter<string>}\r\n     * @memberof SearchComponent\r\n     */\r\n    public userSelect: EventEmitter<string> = new EventEmitter();\r\n\r\n    /**\r\n     * select a user from the search results\r\n     * \r\n     * @param {string} name - the username of the selected user\r\n     * @memberof SearchComponent\r\n     */\r\n    _selectUser(name: string): void{\r\n        console.log('selected '+name);\r\n        this.userSelect.next(name);\r\n    }\r\n\r\n    /**\r\n     * groups of users, created for easy grid layout of search results\r\n     * \r\n     * @type {User[][]}\r\n     * @memberof SearchComponent\r\n     */\r\n    userGroups: User[][];\r\n\r\n    /**\r\n     * Creates an instance of SearchComponent.\r\n     * @param {PersonalDataService} personalDataService \r\n     * @memberof SearchComponent\r\n     */\r\n    constructor(\r\n        private personalDataService: PersonalDataService\r\n        ){}\r\n\r\n    /**\r\n     * search for users that match the search pattern on changes to the page\r\n     * \r\n     * @memberof SearchComponent\r\n     */\r\n    ngOnChanges(): void {\r\n        console.log('searchpattern', this.searchPattern);\r\n        this.personalDataService.searchUserData(this.username, this.searchPattern) \r\n        .then(function(users: User[]){\r\n            this.userGroups = this._toGrid(users,3);\r\n        }.bind(this))   \r\n    }\r\n\r\n    /**\r\n     * convert the array of search results to a grid\r\n     * \r\n     * @param {any[]} items - the items in the grid\r\n     * @param {number} nCols - numbe of columns of the grid\r\n     * @returns \r\n     * @memberof SearchComponent\r\n     */\r\n    _toGrid(items: any[], nCols: number){\r\n        let grid = [];\r\n        const max=nCols*Math.ceil(items.length/nCols);\r\n        for(let idx=0; idx<max; idx+=nCols){\r\n            grid.push(items.slice(idx, idx+nCols))\r\n        }\r\n        return grid;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/search/search.component.ts","import { Injectable } from '@angular/core'\r\nimport {Http, Response, URLSearchParams} from '@angular/http';\r\n\r\nimport { Post } from './../Post';\r\n\r\nimport {assertStatus, handleError} from '../../utils/handleResponse';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n/**\r\n * Service providing a user to access to messages\r\n * \r\n * @export\r\n * @class MessageService\r\n */\r\n@Injectable()\r\nexport class MessageService{\r\n\r\n    /**\r\n     * url providing access to the message resource\r\n     * \r\n     * @private\r\n     * @type {string}\r\n     * @memberof MessageService\r\n     */\r\n    private _messageUrl: string = \"api/message\";\r\n\r\n    /**\r\n     * Creates an instance of MessageService.\r\n     * @param {Http} http \r\n     * @memberof MessageService\r\n     */\r\n    constructor(\r\n        private http: Http\r\n    ){}\r\n\r\n    /**\r\n     * get the number of message available to a user\r\n     * \r\n     * @param {string} username \r\n     * @returns {Promise<number>} \r\n     * @memberof MessageService\r\n     */\r\n    getMessageCount(username: string) :Promise<number>{\r\n        return this.getMessages(username).then(ms => ms.length);\r\n    }\r\n\r\n    /**\r\n     * get the messages available to a user\r\n     * \r\n     * @param {string} username \r\n     * @returns {Promise<Post[]>} \r\n     * @memberof MessageService\r\n     */\r\n    getMessages(username: string): Promise<Post[]>{\r\n\r\n        return new Promise((res: Function, rej: Function)=>{\r\n            let data = new URLSearchParams();\r\n            data.append('username', username);\r\n\r\n            let resolver = (resp: Response)=>res(resp.json().data);\r\n\r\n            this.http.get(this._messageUrl, {search: data})\r\n            .toPromise()\r\n            .then((resp: Response)=>assertStatus(resolver, resp, 200, \"Could not get messages.\"))\r\n            .catch((err: any)=>handleError(rej, err))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * send a new message from a user to another user\r\n     * \r\n     * @param {string} username - the name of the user sending the message\r\n     * @param {string} content - the content of the message\r\n     * @param {string} recipient - the recipient of the message\r\n     * @returns {Promise<{}>} \r\n     * @memberof MessageService\r\n     */\r\n    addMessage(username: string, content: string, recipient: string): Promise<{}>{\r\n\r\n        console.log('add post', username, content)\r\n\r\n        return new Promise((res: Function, rej: Function)=>{\r\n                    let data = new URLSearchParams();\r\n                    data.append('username', username);\r\n                    data.append('content', content);\r\n                    data.append('recipient', recipient);\r\n\r\n                    this.http.post(this._messageUrl, data)\r\n                    .toPromise()\r\n                    .then((resp: Response)=>assertStatus(res, resp, 201, \"Could not add message.\"))\r\n                    .catch((err: any)=>handleError(rej, err))\r\n                });    \r\n    }\r\n\r\n    /**\r\n     * delete a message\r\n     * \r\n     * @param {string} username - the name of the user whose message should be deleted \r\n     * @param {number} idx - the index of the message to delete\r\n     * @returns {Promise<{}>} \r\n     * @memberof MessageService\r\n     */\r\n    deleteMessage(username: string, idx: number): Promise<{}>{\r\n        return new Promise((res: Function, rej: Function)=>{\r\n            let data = new URLSearchParams();\r\n            data.append('username', username);\r\n            data.append('index', idx.toString());\r\n\r\n            this.http.post(this._messageUrl, data)\r\n            .toPromise()\r\n            .then((resp: Response)=>assertStatus(res, resp, 204, \"Could not delete message.\"))\r\n            .then(()=>res())\r\n            .catch((err: any)=>handleError(rej, err))\r\n        });    \r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/services/message.service.ts","import { Injectable } from '@angular/core'\r\nimport {Http, Response, URLSearchParams} from '@angular/http';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { User } from './../User';\r\nimport {assertStatus, handleError} from '../../utils/handleResponse';\r\n\r\n\r\n/**\r\n * Service providing access to a user's personal data\r\n * \r\n * @export\r\n * @class PersonalDataService\r\n */\r\n@Injectable()\r\nexport class PersonalDataService{\r\n\r\n    /**\r\n     * url of the personalData resource\r\n     * \r\n     * @private\r\n     * @memberof PersonalDataService\r\n     */\r\n    private _personalDataUrl = \"api/personalData\";\r\n\r\n    /**\r\n     * Creates an instance of PersonalDataService.\r\n     * @param {Http} http \r\n     * @memberof PersonalDataService\r\n     */\r\n    constructor(\r\n        private http: Http\r\n    ){}\r\n\r\n    /**\r\n     * get the personal data of a user\r\n     * \r\n     * @param {string} username - the username of the signed in user\r\n     * @param {string} desiredUserName - the username of the user whose personal data is desired\r\n     * @returns {Promise<User>} \r\n     * @memberof PersonalDataService\r\n     */\r\n    getUserData(username: string, desiredUserName: string): Promise<User> {\r\n        let resolverFactory = (res: Function)=>(resp: Response)=>res(this._setAge(resp.json()));\r\n        return this._getUserData(username, \"desiredUserName\", desiredUserName, resolverFactory);\r\n    }\r\n\r\n    /**\r\n     * update the user object to include the user's age, based on their DOB\r\n     * \r\n     * @private\r\n     * @param {*} user - the personal data object of the user\r\n     * @returns {User} \r\n     * @memberof PersonalDataService\r\n     */\r\n    private _setAge(user: any): User{\r\n        user.age = Math.floor((Date.now()-Date.parse(user.DOB))/1000/60/60/24/365);\r\n        return user;\r\n    }\r\n\r\n    /**\r\n     * return user data for users matching a query\r\n     * \r\n     * @param {string} username - the name of the logged in user\r\n     * @param {string} desiredUserQuery - query to match other users\r\n     * @returns {Promise<User[]>} \r\n     * @memberof PersonalDataService\r\n     */\r\n    searchUserData(username: string, desiredUserQuery: string): Promise<User[]> {\r\n        let resolverFactory = (res: Function)=>(resp: Response)=>res(resp.json().data.map((user:any)=>this._setAge(user)));\r\n        return this._getUserData(username, \"desiredUserQuery\", desiredUserQuery, resolverFactory);\r\n    }\r\n\r\n    /**\r\n     * get the user data of a single user or multiple users\r\n     * \r\n     * @private\r\n     * @param {string} username - the username of the currently signed in user\r\n     * @param {string} paramType - parameter specifying how to identify users (\"desiredUserName\" or \"desiredUserQuery\")\r\n     * @param {string} param - the name of the user or the search query\r\n     * @param {Function} resolverFactory - function creating a resolver to handle the retrieved data\r\n     * @returns {Promise<any>} \r\n     * @memberof PersonalDataService\r\n     */\r\n    private _getUserData(username: string, paramType:string,  param: string, resolverFactory: Function): Promise<any>{\r\n        return new Promise((res: Function, rej: Function)=>{\r\n            let data = new URLSearchParams();\r\n            data.append('username', username);\r\n            data.append(paramType, param);\r\n\r\n            let resolver = resolverFactory(res);\r\n            this.http.get(this._personalDataUrl, {search: data})\r\n            .toPromise()\r\n            .then((resp: Response)=>assertStatus(resolver, resp, 200, \"Could not get personal data.\"))\r\n            .catch((err: any)=>handleError(rej, err))\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/services/personal-data.service.ts","import { Injectable } from '@angular/core'\r\nimport {Http, Response, URLSearchParams} from '@angular/http';\r\n\r\nimport { Post } from './../Post';\r\n\r\nimport {assertStatus, handleError} from '../../utils/handleResponse';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n/**\r\n * Service providing a user access to posts\r\n * \r\n * @export\r\n * @class PostService\r\n */\r\n@Injectable()\r\nexport class PostService{\r\n\r\n    /**\r\n     * url of the post resource\r\n     * \r\n     * @private\r\n     * @type {string}\r\n     * @memberof PostService\r\n     */\r\n    private _postUrl: string = \"api/post\";\r\n\r\n    /**\r\n     * Creates an instance of PostService.\r\n     * @param {Http} http \r\n     * @memberof PostService\r\n     */\r\n    constructor(\r\n        private http: Http\r\n    ){}\r\n\r\n    /**\r\n     * get the posts followed by a user\r\n     * \r\n     * @param {string} username \r\n     * @returns {Promise<Post[]>} \r\n     * @memberof PostService\r\n     */\r\n    getFollowedPosts(username: string): Promise<Post[]> {\r\n        return this._getPosts(username, username, \"followed\");\r\n    }\r\n\r\n    /**\r\n     * get the posts created by a user\r\n     * \r\n     * @param {string} username \r\n     * @param {string} poster \r\n     * @returns {Promise<Post[]>} \r\n     * @memberof PostService\r\n     */\r\n    getOwnPosts(username: string, poster: string): Promise<Post[]>{\r\n        return this._getPosts(username, poster, \"own\");\r\n    }\r\n\r\n    /**\r\n     * get various types of posts\r\n     * \r\n     * @private\r\n     * @param {string} username \r\n     * @param {string} poster \r\n     * @param {string} type - the type of posts (\"followed\" or \"own\")\r\n     * @returns {Promise<Post[]>} \r\n     * @memberof PostService\r\n     */\r\n    private _getPosts(username: string, poster: string, type: string): Promise<Post[]>{\r\n\r\n        return new Promise((res: Function, rej: Function)=>{\r\n            let data = new URLSearchParams();\r\n            data.append('username', username);\r\n            data.append('poster', poster);\r\n            data.append('type', type);\r\n\r\n            let resolver = (resp: Response)=>res(resp.json().data);\r\n\r\n            this.http.get(this._postUrl, {search: data})\r\n            .toPromise()\r\n            .then((resp: Response)=>assertStatus(resolver, resp, 200, \"Could not get posts.\"))\r\n            .catch((err: any)=>handleError(rej, err))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * add a new post\r\n     * \r\n     * @param {string} username \r\n     * @param {string} content \r\n     * @returns {Promise<{}>} \r\n     * @memberof PostService\r\n     */\r\n    addPost(username: string, content: string): Promise<{}>{\r\n\r\n        console.log('add post', username, content)\r\n\r\n        return new Promise((res: Function, rej: Function)=>{\r\n                    let data = new URLSearchParams();\r\n                    data.append('username', username);\r\n                    data.append('content', content);\r\n\r\n                    this.http.post(this._postUrl, data)\r\n                    .toPromise()\r\n                    .then((resp: Response)=>assertStatus(res, resp, 201, \"Could not add post.\"))\r\n                    .catch((err: any)=>handleError(rej, err))\r\n                });    \r\n    }\r\n\r\n    /**\r\n     * delete a post\r\n     * \r\n     * @param {string} username \r\n     * @param {number} idx - index of the post to delete\r\n     * @returns {Promise<{}>} \r\n     * @memberof PostService\r\n     */\r\n    deletePost(username: string, idx: number): Promise<{}>{\r\n        return new Promise((res: Function, rej: Function)=>{\r\n            let data = new URLSearchParams();\r\n            data.append('username', username);\r\n            data.append('index', idx.toString());\r\n\r\n            this.http.delete(this._postUrl, {search: data})\r\n            .toPromise()\r\n            .then((resp: Response)=>assertStatus(res, resp, 204, \"Could not delete post.\"))\r\n            .catch((err: any)=>handleError(rej, err))\r\n        });    \r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/services/post.service.ts","import {Injectable} from '@angular/core';\r\n\r\nimport {Http, Response, URLSearchParams} from '@angular/http';\r\n\r\nimport {assertStatus, handleError} from '../../utils/handleResponse';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n/**\r\n * Service providing access to premium content\r\n * \r\n * @export\r\n * @class PremiumService\r\n */\r\n@Injectable()\r\nexport class PremiumService {\r\n    \r\n    /**\r\n     * url of the premium resource\r\n     * \r\n     * @private\r\n     * @memberof PremiumService\r\n     */\r\n    private _premiumUrl = \"api/premium\";\r\n    \r\n    /**\r\n     * Creates an instance of PremiumService.\r\n     * @param {Http} http \r\n     * @memberof PremiumService\r\n     */\r\n    constructor(\r\n        private http: Http\r\n    ){}\r\n\r\n    /**\r\n     * get the premium items purchased by a user\r\n     * \r\n     * @param {string} username \r\n     * @returns {Promise<string>} \r\n     * @memberof PremiumService\r\n     */\r\n    getPremium(username: string): Promise<string>{\r\n        return new Promise((res: Function, rej: Function)=>{\r\n            let data = new URLSearchParams();\r\n            data.append(\"username\", username);\r\n\r\n            let resolver = (resp: Response)=>res(resp.json().data);\r\n\r\n            this.http.get(this._premiumUrl, {search: data})\r\n            .toPromise()\r\n            .then((resp: Response)=>assertStatus(resolver, resp, 200, \"Unable to get premium items\"))\r\n            .catch((err: any)=>handleError(rej, err))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * purchase a new premium item\r\n     * \r\n     * @param {string} username \r\n     * @param {string} content \r\n     * @returns {Promise<{}>} \r\n     * @memberof PremiumService\r\n     */\r\n    addPremium(username: string, content: any): Promise<{}>{\r\n        return new Promise((res:Function, rej: Function)=>{\r\n\r\n            let formData: FormData = new FormData();\r\n            formData.append('username',username);\r\n            formData.append(\"content\", content, content.name);\r\n\r\n            let resolver = ()=>res();\r\n\r\n            this.http.post(this._premiumUrl, formData)\r\n            .toPromise()\r\n            .then((resp: Response)=>assertStatus(resolver, resp, 201, \"Unable to add premium item\"))\r\n            .catch((err: any)=>handleError(rej, err))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * delete a premium item\r\n     * \r\n     * @param {string} username \r\n     * @param {number} index - index of the item to remove \r\n     * @returns {Promise<{}>} \r\n     * @memberof PremiumService\r\n     */\r\n    deletePremium(username: string, index: number): Promise<{}>{\r\n        return new Promise((res:Function, rej: Function)=>{\r\n            let data = new URLSearchParams();\r\n            data.append(\"username\", username);\r\n            data.append(\"index\", index.toString());\r\n\r\n            let resolver = ()=>res();\r\n\r\n            this.http.delete(this._premiumUrl, {search: data})\r\n            .toPromise()\r\n            .then((resp: Response)=>assertStatus(resolver, resp, 204, \"Unable to delete premium item\"))\r\n            .catch((err: any)=>handleError(rej, err))\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/services/premium.service.ts","import { Injectable } from '@angular/core'\r\nimport {Http, Response, URLSearchParams} from '@angular/http';\r\n\r\nimport {assertStatus, handleError} from '../../utils/handleResponse';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n/**\r\n * Service providing access to subscriptions\r\n * \r\n * @export\r\n * @class SubscriptionService\r\n */\r\n@Injectable()\r\nexport class SubscriptionService{\r\n\r\n    /**\r\n     * url of the subscription resource\r\n     * \r\n     * @private\r\n     * @type {string}\r\n     * @memberof SubscriptionService\r\n     */\r\n    private _subscriptionUrl: string = \"api/subscription\";\r\n\r\n    /**\r\n     * Creates an instance of SubscriptionService.\r\n     * @param {Http} http \r\n     * @memberof SubscriptionService\r\n     */\r\n    constructor(\r\n        private http: Http\r\n    ){}\r\n\r\n    /**\r\n     * get the list of users followed by the current user\r\n     * \r\n     * @param {string} username \r\n     * @returns {Promise<String[]>} \r\n     * @memberof SubscriptionService\r\n     */\r\n    getSubscriptions(username: string): Promise<String[]>{\r\n        return new Promise((res: Function, rej: Function)=>{\r\n            let data = new URLSearchParams();\r\n            data.append('username', username);\r\n\r\n            let resolver = (resp: Response)=>res(resp.json().data);\r\n\r\n            this.http.get(this._subscriptionUrl, {search: data})\r\n            .toPromise()\r\n            .then((resp: Response)=>assertStatus(resolver, resp, 204, \"Could not get subscriptions.\"))\r\n            .catch((err: any)=>handleError(rej, err))\r\n        });  \r\n    }\r\n\r\n    /**\r\n     * follow a user\r\n     * \r\n     * @param {string} username \r\n     * @param {string} followee \r\n     * @returns {Promise<{}>} \r\n     * @memberof SubscriptionService\r\n     */\r\n    addSubscription(username: string, followee: string): Promise<{}> {\r\n        return new Promise((res: Function, rej: Function)=>{\r\n                    let data = new URLSearchParams();\r\n                    data.append('username', username);\r\n                    data.append('followee', followee);\r\n\r\n                    this.http.post(this._subscriptionUrl, data)\r\n                    .toPromise()\r\n                    .then((resp: Response)=>assertStatus(res, resp, 201, \"Could not add subscription.\"))\r\n                    .catch((err: any)=>handleError(rej, err))\r\n                });  \r\n    }\r\n\r\n    /**\r\n     * unfollow a user\r\n     * \r\n     * @param {string} username \r\n     * @param {string} followee \r\n     * @returns {Promise<{}>} \r\n     * @memberof SubscriptionService\r\n     */\r\n    deleteSubscription(username: string, followee: string): Promise<{}> {\r\n        return new Promise((res: Function, rej: Function)=>{\r\n            let data = new URLSearchParams();\r\n            data.append('username', username);\r\n            data.append('followee',followee);\r\n\r\n            this.http.delete(this._subscriptionUrl, {search: data})\r\n            .toPromise()\r\n            .then((resp: Response)=>assertStatus(res, resp, 204, \"Could not delete subscription.\"))\r\n            .catch((err: any)=>handleError(rej, err))\r\n        }); \r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/services/subscription.service.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#submitPost{\\r\\n    display: block;\\r\\n    margin: 0 auto;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/utils/messageForm/message-form.component.css\n// module id = ../../../../../src/app/member/utils/messageForm/message-form.component.css\n// module chunks = main","module.exports = \"<form class=\\\"form-group\\\" #postForm=\\\"ngForm\\\" (ngSubmit)=\\\"submitPost()\\\">\\r\\n    <label for=\\\"postContainer\\\">{{label}}</label>\\r\\n    <textarea\\r\\n            class=\\\"form-control\\\" \\r\\n            [(ngModel)]=\\\"postContent\\\"\\r\\n            name=\\\"postContent\\\" \\r\\n            id=\\\"postContainer\\\"\\r\\n            [rows]=\\\"rows\\\" \\r\\n            required \\r\\n            #postContentInput=\\\"ngModel\\\"></textarea>\\r\\n    <button type=\\\"submit\\\" \\r\\n            id=\\\"submitPost\\\" \\r\\n            class=\\\"btn btn-primary centered\\\" \\r\\n            [disabled]=\\\"!postForm.valid\\\">Submit</button>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/utils/messageForm/message-form.component.html\n// module id = ../../../../../src/app/member/utils/messageForm/message-form.component.html\n// module chunks = main","import { Component, Input, Output, EventEmitter } from '@angular/core'\r\n\r\n@Component({\r\n    selector: 'message-form',\r\n    templateUrl: \"./message-form.component.html\",\r\n    styleUrls: ['./message-form.component.css']\r\n})\r\nexport class MessageFormComponent {\r\n\r\n    postContent: string;\r\n\r\n    @Input() rows: string;\r\n    @Input() label: string;\r\n\r\n    @Output() postSubmitted = new EventEmitter<string>();\r\n\r\n    submitPost():void{\r\n        this.postSubmitted.emit(this.postContent);\r\n        this.postContent = \"\";\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/utils/messageForm/message-form.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".postContainer {\\r\\n    width: 90%;\\r\\n    margin: 25px auto;\\r\\n    background-color: #7a8c9b;\\r\\n    border-color: black;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.posterName {\\r\\n    /*width: 50%;\\r\\n    margin: auto;\\r\\n    text-align: center;*/\\r\\n    padding-left: 5%;\\r\\n    font-size: 20px;\\r\\n    font-weight: bold;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.timestamp {\\r\\n    /*width: 50%;\\r\\n    margin: auto;\\r\\n    text-align: center;*/\\r\\n    font-size: 16px;\\r\\n    color: white;\\r\\n    padding-left: 2%;\\r\\n}\\r\\n\\r\\n.postContent {\\r\\n    width: 95%;\\r\\n    margin: auto;\\r\\n    text-align: left;\\r\\n    font-size: 16px;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/utils/post/post.component.css\n// module id = ../../../../../src/app/member/utils/post/post.component.css\n// module chunks = main","module.exports = \"<div class=\\\"postContainer\\\">\\r\\n    <p>\\r\\n        <a class=\\\"posterName\\\" (click)=\\\"selectUser(poster)\\\">{{poster}}</a>\\r\\n        <span class=\\\"timestamp\\\">   {{timestamp}}</span>\\r\\n    </p>\\r\\n    <p class=\\\"postContent\\\">{{content}}</p>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/utils/post/post.component.html\n// module id = ../../../../../src/app/member/utils/post/post.component.html\n// module chunks = main","import {Component, EventEmitter} from '@angular/core';\r\n\r\n@Component({\r\n    selector: \"post\",\r\n    inputs: [\"poster\", \"timestamp\", \"content\"],\r\n    outputs: [\"userSelect\"],\r\n    templateUrl: \"./post.component.html\",\r\n    styleUrls: [\"./post.component.css\"]\r\n})\r\nexport class PostComponent{\r\n    public poster: string;\r\n    public timestamp: string;\r\n    public content: string;\r\n\r\n    public userSelect: EventEmitter<string> = new EventEmitter();\r\n\r\n    selectUser(otherUsername: string): void{\r\n        this.userSelect.next(otherUsername);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/member/utils/post/post.component.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'not-found',\r\n    template: `<h1>Page not found!</h1>`\r\n})\r\nexport class NotFoundComponent {};\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/not-found.component.ts","import { Injectable } from '@angular/core'\r\nimport { Router } from '@angular/router'\r\nimport { Http, Response, URLSearchParams  } from '@angular/http';\r\n\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/observable/throw'\r\n\r\nimport {assertStatus, handleError} from '../utils/handleResponse'\r\n\r\n/**\r\n * Service used to authenticate users and provide access to the members area\r\n * \r\n * @export\r\n * @class AuthService\r\n */\r\n@Injectable()\r\nexport class AuthService{\r\n\r\n    /**\r\n     * url providing access to the session resource\r\n     * \r\n     * @private\r\n     * @type {string}\r\n     * @memberof AuthService\r\n     */\r\n    private _loginUrl: string = \"api/session\";\r\n\r\n    /**\r\n     * Creates an instance of AuthService.\r\n     * @param {Http} http \r\n     * @param {Router} router \r\n     * @memberof AuthService\r\n     */\r\n    constructor(\r\n        private http: Http,\r\n        private router: Router){}\r\n\r\n    /**\r\n     * attempt to log in\r\n     * \r\n     * @param {string} username \r\n     * @param {string} password \r\n     * @returns {Promise<{}>} \r\n     * @memberof AuthService\r\n     */\r\n    tryLogin(username: string, password: string): Promise<{}>{\r\n\r\n        let data = new URLSearchParams();\r\n        data.append('username', username);\r\n        data.append('password', password);\r\n\r\n        return  new Promise((res: Function, rej: Function)=>{\r\n                    this.http.post(this._loginUrl, data)\r\n                    .toPromise()\r\n                    .then((resp: Response)=>assertStatus(res, resp, 201, \"Sign-in failed\"))\r\n                    .catch((err)=>handleError(rej, err));\r\n                });\r\n    }\r\n\r\n    /**\r\n     * assert that a user is logged with a valid session in and redirect to the log in page if not\r\n     * \r\n     * @param {string} username \r\n     * @returns {Promise<boolean>} \r\n     * @memberof AuthService\r\n     */\r\n    assertLoggedIn(username: string): Promise<boolean>{\r\n\r\n        console.log(\"check session \"+username);\r\n\r\n        let data = new URLSearchParams();\r\n        data.append('username', username);\r\n\r\n        return  new Promise(function(res:Function, rej:Function){\r\n\r\n                    let rejector = ()=>{this.router.navigate(['/sign-in']); rej()};\r\n\r\n                    this.http.get(this._loginUrl, {search: data})\r\n                    .toPromise()\r\n                    .then((resp: Response)=>assertStatus(res, resp, 200, \"invalid session\"))\r\n                    .catch((err:any)=>handleError(rejector, err));\r\n                }.bind(this));\r\n    }\r\n\r\n    /**\r\n     * sign out and delete the user's session\r\n     * \r\n     * @param {string} username \r\n     * @returns {Promise<any>} \r\n     * @memberof AuthService\r\n     */\r\n    signout(username: string): Promise<any>{\r\n\r\n        console.log(\"delete session \"+username);\r\n\r\n        let data = new URLSearchParams();\r\n        data.append('username', username);\r\n\r\n        return  new Promise(function(res:Function, rej:Function){\r\n                    this.http.delete(this._loginUrl, {search: data})\r\n                    .toPromise()\r\n                    .then((resp: Response)=>assertStatus(res, resp, 204, \"invalid session, signout failed\"))\r\n                    .catch((err:any)=>handleError(rej, err));\r\n                }.bind(this));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/services/auth.service.ts","import {Injectable} from '@angular/core';\r\nimport {Http, Response} from '@angular/http';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport {assertStatus, handleError} from '../utils/handleResponse'\r\n\r\nimport {AuthService} from './auth.service';\r\n\r\n/**\r\n * Service that allows new users to sign up for an account\r\n * \r\n * @export\r\n * @class SignUpService\r\n */\r\n@Injectable()\r\nexport class SignUpService{\r\n    \r\n    /**\r\n     * the url of the signUp resource\r\n     * \r\n     * @private\r\n     * @memberof SignUpService\r\n     */\r\n    private _signUpUrl = 'api/signUp';\r\n\r\n    /**\r\n     * Creates an instance of SignUpService.\r\n     * @param {Http} http \r\n     * @param {AuthService} authService \r\n     * @memberof SignUpService\r\n     */\r\n    constructor(\r\n        private http: Http,\r\n        private authService: AuthService\r\n    ){}\r\n\r\n    /**\r\n     * sign up for a member account and automatically sign in if successful\r\n     * \r\n     * @param {string} username - unique name of the user\r\n     * @param {string} location - current location of the user\r\n     * @param {string} DOB - the user's date of birth\r\n     * @param {string} business - the business the user works in\r\n     * @param {*} picture - the user's picture\r\n     * @param {string} password - the user's password\r\n     * @returns {Promise<{}>} \r\n     * @memberof SignUpService\r\n     */\r\n    signUp(username: string, location: string, DOB: string, business: string, picture: any, password: string): Promise<{}>{\r\n        console.log('send sign up request')\r\n        return new Promise((res: Function, rej: Function)=>{\r\n        \r\n            let formData: FormData = new FormData();\r\n            formData.append('username',username);\r\n            formData.append('location',location);\r\n            formData.append('DOB',DOB);\r\n            formData.append('business',business);\r\n            formData.append(\"picture\", picture, picture.name);\r\n            formData.append('password',password);\r\n\r\n            this.http.post(this._signUpUrl, formData)\r\n            .toPromise()\r\n            .then((resp:Response)=>assertStatus(res, resp, 201, \"Could not create user.\"))\r\n            .then(()=>this.authService.tryLogin(username, password))\r\n            .catch((err:any)=>handleError(rej, err));\r\n        });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/services/sign-up.service.ts","    import {Response} from '@angular/http';\r\n    \r\n    export function assertStatus(res: Function, resp:Response, expectedStatus: number, diagnostic: string): void{\r\n        let actualStatus = resp.status;\r\n        if(actualStatus !== expectedStatus) throw new Error(diagnostic);\r\n        res(resp)\r\n    }\r\n\r\n    export function handleError (rej: Function, error: Response | any): void {\r\n        // In a real world app, you might use a remote logging infrastructure\r\n        let errMsg: string;\r\n        if (error instanceof Response && error.text()) {\r\n            errMsg = error.text();\r\n        } else {\r\n            errMsg = error.message ? error.message : error.toString();\r\n        }\r\n        rej(errMsg);\r\n    }\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/app/utils/handleResponse.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/apatters/code/home-page/apps/social-media/src/main.ts"],"sourceRoot":"webpack:///"}